{
  "files": [
    {
      "path": "divide.js",
      "functions": [
        {
          "name": "divide",
          "comment": "",
          "params": "a,b",
          "async": "false",
          "status": "2",
          "functionString": "function divide(a, b) {\n    return a / b;\n}",
          "testCases": [
            {
              "description": "Division <divide>",
              "arguments": [
                "7",
                "2"
              ],
              "matcher": "toBe",
              "expected": "3.5",
              "passed": true
            },
            {
              "description": "Another division <divide>",
              "arguments": [
                "10",
                "5"
              ],
              "matcher": "toStrictEqual",
              "expected": "2",
              "passed": true
            }
          ]
        }
      ]
    },
    {
      "path": "multiply.js",
      "functions": [
        {
          "name": "multiplyTwo",
          "comment": "",
          "params": "a,b",
          "async": "false",
          "status": "-1",
          "functionString": "function multiplyTwo(a, b) {\n    return a * b;\n}",
          "testCases": [
            {
              "description": "Multiply two numbers lager than zero. <multiplyTwo>",
              "arguments": [
                "10",
                "55"
              ],
              "matcher": "toEqual",
              "expected": "550",
              "passed": true
            },
            {
              "description": "Multiply with zero <multiplyTwo>",
              "arguments": [
                "175",
                "0"
              ],
              "matcher": "toStrictEqual",
              "expected": "0",
              "passed": true
            },
            {
              "description": "Multiply negative (will fail) <multiplyTwo>",
              "arguments": [
                "20",
                "-1"
              ],
              "matcher": "toEqual",
              "expected": "20",
              "passed": false
            }
          ]
        },
        {
          "name": "multiplyThree",
          "comment": "",
          "params": "a,b,c",
          "async": "false",
          "status": "2",
          "functionString": "function multiplyThree(a, b, c) {\n    return a * b * c;\n}",
          "testCases": [
            {
              "description": "Multiply three numbers <multiplyThree>",
              "arguments": [
                "1",
                "2",
                "3"
              ],
              "matcher": "toBe",
              "expected": "6",
              "passed": true
            }
          ]
        }
      ]
    },
    {
      "path": "square.js",
      "functions": [
        {
          "name": "square",
          "comment": "I don't want to square the number - please give me the opportunity to cube it instead.",
          "params": "a",
          "async": "false",
          "status": "1",
          "functionString": "function square(a) {\n    return a * a;\n}",
          "testCases": []
        }
      ]
    },
    {
      "path": "subtraction.js",
      "functions": [
        {
          "name": "subtract",
          "comment": "",
          "params": "a,b",
          "async": "false",
          "status": "2",
          "functionString": "function subtract(a, b) {\n    return a - b;\n}",
          "testCases": [
            {
              "description": "Subtract this please <subtract>",
              "arguments": [
                "10",
                "2"
              ],
              "matcher": "toBe",
              "expected": "8",
              "passed": true
            }
          ]
        }
      ]
    },
    {
      "path": "sum.js",
      "functions": [
        {
          "name": "sumTwo",
          "comment": "",
          "params": "a,b",
          "async": "false",
          "status": "2",
          "functionString": "function sumTwo(a, b) {\n    return a + b;\n}",
          "testCases": [
            {
              "description": "Sum dis two numbers <sumTwo>",
              "arguments": [
                "20",
                "49"
              ],
              "matcher": "toEqual",
              "expected": "69",
              "passed": true
            }
          ]
        },
        {
          "name": "sumThree",
          "comment": "I just dont feel like summing three numbers. I will test this one another day.",
          "params": "a,b,c",
          "async": "false",
          "status": "1",
          "functionString": "function sumThree(a, b, c) {\n    return a + b + c;\n}",
          "testCases": []
        }
      ]
    }
  ]
}
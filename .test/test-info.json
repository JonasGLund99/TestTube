{
  "files": [
    {
      "path": "divide.js",
      "functions": [
        {
          "name": "divide",
          "comment": "We just hate division.",
          "params": "a,b",
          "async": "false",
          "status": "1",
          "functionString": "function divide(a, b) {\n    return a / b;\n}",
          "testCases": []
        }
      ]
    },
    {
      "path": "multiplication/multiply.js",
      "functions": [
        {
          "name": "multiplyTwo",
          "comment": "",
          "params": "a,b",
          "async": "false",
          "status": "0",
          "functionString": "function multiplyTwo(a, b) {\n    return a * b;\n}",
          "testCases": [
            {
              "description": "Multiplying two numbers <multiplyTwo>",
              "arguments": [
                "5",
                "10"
              ],
              "matcher": "toStrictEqual",
              "expected": "50",
              "passed": false
            }
          ]
        },
        {
          "name": "multiplyThree",
          "comment": "",
          "params": "a,b,c",
          "async": "false",
          "status": "0",
          "functionString": "function multiplyThree(a, b, c) {\n    return a * b * c;\n}",
          "testCases": [
            {
              "description": "Multiplying three numbers <multiplyThree>",
              "arguments": [
                "2",
                "3",
                "4"
              ],
              "matcher": "toStrictEqual",
              "expected": "24",
              "passed": false
            }
          ]
        }
      ]
    },
    {
      "path": "multiplication/square.js",
      "functions": [
        {
          "name": "square",
          "comment": "",
          "params": "a",
          "async": "false",
          "status": "0",
          "functionString": "function square(a) {\n    return a * a;\n}",
          "testCases": [
            {
              "description": "Square a number <square>",
              "arguments": [
                "3"
              ],
              "matcher": "toStrictEqual",
              "expected": "9",
              "passed": false
            },
            {
              "description": "Square a negative number <square>",
              "arguments": [
                "-3"
              ],
              "matcher": "toStrictEqual",
              "expected": "9",
              "passed": false
            }
          ]
        }
      ]
    },
    {
      "path": "subtraction.js",
      "functions": [
        {
          "name": "subtract",
          "comment": "",
          "params": "a,b",
          "async": "false",
          "status": "0",
          "functionString": "function subtract(a, b) {\n    return a - b;\n}",
          "testCases": [
            {
              "description": "Subtract two numbers <subtract>",
              "arguments": [
                "10",
                "5"
              ],
              "matcher": "toStrictEqual",
              "expected": "5",
              "passed": false
            },
            {
              "description": "Subtract two numbers (negative) <subtract>",
              "arguments": [
                "-10",
                "5"
              ],
              "matcher": "toStrictEqual",
              "expected": "-15",
              "passed": false
            }
          ]
        }
      ]
    },
    {
      "path": "sum.js",
      "functions": [
        {
          "name": "sumTwo",
          "comment": "",
          "params": "a,b",
          "async": "false",
          "status": "0",
          "functionString": "function sumTwo(a, b) {\n    return a + b;\n}",
          "testCases": [
            {
              "description": "Sum two numbers <sumTwo>",
              "arguments": [
                "22",
                "10"
              ],
              "matcher": "toStrictEqual",
              "expected": "32",
              "passed": false
            }
          ]
        },
        {
          "name": "sumThree",
          "comment": "",
          "params": "a,b,c",
          "async": "false",
          "status": "0",
          "functionString": "function sumThree(a, b, c) {\n    return a + b + c;\n}",
          "testCases": [
            {
              "description": "Sum three numbers <sumThree>",
              "arguments": [
                "10",
                "20",
                "30"
              ],
              "matcher": "toStrictEqual",
              "expected": "60",
              "passed": false
            },
            {
              "description": "Sum three numbers (negative) <sumThree>",
              "arguments": [
                "-10",
                "-10",
                "-10"
              ],
              "matcher": "toStrictEqual",
              "expected": "-30",
              "passed": false
            }
          ]
        }
      ]
    }
  ]
}